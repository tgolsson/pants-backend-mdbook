[GLOBAL]
pants_version = "2.18.0.dev5"
build_file_prelude_globs = ["examples/macros.py"]

pythonpath = [
   "%(buildroot)s/pants-plugins/kustomize",
   "%(buildroot)s/pants-plugins/oci",
   "%(buildroot)s/pants-plugins/k8s",
   "%(buildroot)s/pants-plugins/mdbook",
   "%(buildroot)s/pants-plugins/bitwarden",
   "%(buildroot)s/pants-plugins/secrets",
]

backend_packages = [
  "pants.backend.python",
  "pants.backend.experimental.python",

  "pants.backend.python.lint.black",
  "pants.backend.python.lint.isort",
  "pants.backend.python.lint.flake8",

  "pants.backend.plugin_development",
  "pants_backend_mdbook",
  "pants_backend_kustomize",
  "pants_backend_k8s",
  "pants_backend_oci",
  "pants_backend_bitwarden",
  "pants_backend_secrets",

  "pants.backend.shell",
  "pants.backend.experimental.python.lint.ruff"
]

pants_ignore = [
    ".*/",
    "/dist/",
    "__pycache__",
    "**/pdm_build.py",
]

[source]
root_patterns = [
  '/',
  '/pants-plugins',
  '/examples/oci',
]
marker_filenames = ["pyproject.toml"]

[anonymous-telemetry]
enabled = true
repo_id = "e32e6905-7a7d-405f-82b1-86d2723b0c4d"

[python]
tailor_pex_binary_targets = true
interpreter_constraints = [">=3.7,<3.10"]
enable_resolves = true
default_resolve = "pants-plugins"

[python.resolves]
pants-plugins = "pants-plugins/pants.lock"
pants-215 = "pants-plugins/215.lock"
pants-216 = "pants-plugins/216.lock"
pants-217 = "pants-plugins/217.lock"
example-1 = "locks/example-1.lock"


pytest = "locks/tools/pytest.lock"
isort = "locks/tools/isort.lock"
ipython = "locks/tools/ipython.lock"
black = "locks/tools/black.lock"


[python.resolves_to_interpreter_constraints]
pants-plugins = [">=3.7,<3.10"]
pants-215 = [">=3.7,<3.10"]
pants-216 = [">=3.7,<3.10"]
pants-217 = [">=3.7,<3.10"]

black = [">=3.9,<3.10"]

[black]
install_from_resolve = "black"
interpreter_constraints = ["==3.9.*"]

[ipython]
install_from_resolve = "ipython"

[isort]
install_from_resolve = "isort"
args = '--resolve-all-configs'
interpreter_constraints = ["==3.9.*"]
config = "['pyproject.toml']"

[pytest]
args = ["--no-header"]
execution_slot_var = "TEST_EXECUTION_SLOT"
install_from_resolve = "pytest"
